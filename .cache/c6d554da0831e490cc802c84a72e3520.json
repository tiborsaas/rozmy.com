{"dependencies":[{"name":"c:\\dev\\www\\rozmy.com\\node_modules\\simplify-path\\package.json","includedInParent":true,"mtime":1522511390257}],"generated":{"js":"function getSqDist(p1, p2) {\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// basic distance-based simplification\nmodule.exports = function simplifyRadialDist(points, tolerance) {\n    if (points.length<=1)\n        return points;\n    tolerance = typeof tolerance === 'number' ? tolerance : 1;\n    var sqTolerance = tolerance * tolerance;\n    \n    var prevPoint = points[0],\n        newPoints = [prevPoint],\n        point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}","map":{"mappings":[{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"rozmy.com\\node_modules\\simplify-path\\radial-distance.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"rozmy.com\\node_modules\\simplify-path\\radial-distance.js":"function getSqDist(p1, p2) {\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// basic distance-based simplification\nmodule.exports = function simplifyRadialDist(points, tolerance) {\n    if (points.length<=1)\n        return points;\n    tolerance = typeof tolerance === 'number' ? tolerance : 1;\n    var sqTolerance = tolerance * tolerance;\n    \n    var prevPoint = points[0],\n        newPoints = [prevPoint],\n        point;\n\n    for (var i = 1, len = points.length; i < len; i++) {\n        point = points[i];\n\n        if (getSqDist(point, prevPoint) > sqTolerance) {\n            newPoints.push(point);\n            prevPoint = point;\n        }\n    }\n\n    if (prevPoint !== point) newPoints.push(point);\n\n    return newPoints;\n}"},"lineCount":31}},"hash":"2f493bd03dcb7fb4051a1a20c36958c2","cacheData":{"env":{}}}